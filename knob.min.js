/*
 Knob.js
 Class inheritance library for Knockout based on Objs
 (c) Michael Best
 License: MIT (http://www.opensource.org/licenses/mit-license.php)
 Version 0.1.0
*/
(function(f){"object"===typeof exports?module.exports=f(require("knockout")):"function"===typeof define&&define.amd?define(["knockout"],f):knob=f(ko)})(function(f,m){function l(a){var b=this.instantiate;this.instantiate=function(g){return b.call(this,g).extend(a)};return this}var n=Object.create||function(a){function b(){}b.prototype=a;return new b},h={},c;for(c in h)h[c]=m;c=function(a,b,g){if("string"!==typeof a)throw Error("invalid class-path: "+a);var d=h[a],c=arguments.length;if(1===c){if(d)return d;
throw Error("non-existent class: "+a);}if(2===c){if(g=b,null===g)return h[a]=m,d}else{var k="string"===typeof b?h[b]:b;if("function"!==typeof k)throw Error("invalid super-class: "+b);}if(!g||"object"!==typeof g)throw Error("invalid proto-object given for: "+a);d=h[a]=(new Function("c","return function "+a.replace(/[^\w$]/g,"_")+"(){ c.apply(this, arguments); };"))(function(){for(var a in e)e[a]&&e[a].instantiate&&(this[a]=e[a].instantiate(this));e.initialize&&e.initialize.apply(this,arguments)});
d.$classpath=a;var e=d.prototype;k&&(e=d.prototype=n(k.prototype),e.constructor=d,d.$superclass=k,d.$super=k.prototype);f.utils.extend(e,g);return d};c.computed=function(a,b){a.instantiate=function(c){return f.computed(a,c,{deferEvaluation:!0,write:b})};a.extend=l;return a};c.observable=function(a){return{instantiate:function(){return f.observable(a)},extend:l,v:a}};c.observableArray=function(){return{instantiate:function(){return f.observableArray()},extend:l}};c.bound=function(a){a.instantiate=
function(b){return a.bind(b)};return a};return c});
